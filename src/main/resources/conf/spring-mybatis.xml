<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	<!-- mybatis文件配置，扫描所有mapper文件 -->
	
	
	<!--  
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="mapperLocations">
            <array>
                <value>classpath:conf-mybatis/*Mapper.xml</value>
            </array>
        </property>
        <property name="dataSource" ref="dataSource" />
    </bean>
    -->
    
    
    <bean id="sqlSessionFactory"
       class="org.mybatis.spring.SqlSessionFactoryBean"
       p:dataSource-ref="masterDataSource"
       p:configLocation="classpath:mybatis/mybatis-config.xml"
       p:mapperLocations="classpath:mybatis/*Mapper.xml"/>

	<!-- spring与mybatis整合配置，扫描所有dao -->
	
	
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
       p:basePackage="com.jonly.**.dao"
       p:sqlSessionFactoryBeanName="sqlSessionFactory"/>

	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.ea.trade.dao" p:sqlSessionFactoryBeanName="sqlSessionFactory" >
        <property name="markerInterface" value="com.ea.common.mybatis.BaseMapper" />
    </bean> -->
     
    <!-- 通用DAO注册器 -->
	<bean id="genericDaoRegistry" class="com.jonly.frame.dao.impl.MyBatisDaoRegistry">
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 对数据源进行事务管理 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="masterDataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />
    
     <!-- 读写分离配置 --> 
	<bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc_driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc_url}</value>
		</property>
		<property name="username">
			<value>${jdbc_username}</value>
		</property>
		<property name="password">
			<value>${jdbc_password}</value>
		</property>
		<property name="maxActive">
			<value>200</value>
		</property>
		<property name="initialSize">
			<value>1</value>
		</property>
		<property name="maxWait">
			<value>60000</value>
		</property>
		<property name="minIdle">
			<value>3</value>
		</property>
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		<property name="removeAbandonedTimeout">
			<value>180</value>
		</property>
		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>
	</bean>
	
    <!-- <bean id="slaveDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>${slave.jdbc_driverClassName}</value>
		</property>
		<property name="url">
			<value>${slave.jdbc_url}</value>
		</property>
		<property name="username">
			<value>${slave.jdbc_username}</value>
		</property>
		<property name="password">
			<value>${slave.jdbc_password}</value>
		</property>
		<property name="maxActive">
			<value>200</value>
		</property>
		<property name="initialSize">
			<value>1</value>
		</property>
		<property name="maxWait">
			<value>60000</value>
		</property>
		<property name="minIdle">
			<value>3</value>
		</property>
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		<property name="removeAbandonedTimeout">
			<value>180</value>
		</property>
		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>
	</bean>
    
    <bean id="dynamicDataSource" class="com.jonly.test.rw.DynamicDataSource">  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <entry key="master" value-ref="masterDataSource"></entry>  
                <entry key="slave"  value-ref="slaveDataSource"></entry>  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="masterDataSource"/>   
    </bean>
   
    <aop:aspectj-autoproxy />  
    <bean id="dynamicDataSourceAspect" class="com.jonly.test.rw.DataSourceAspect" />  
	 <aop:config>  
	      <aop:aspect id="c" ref="dynamicDataSourceAspect">  
	            <aop:pointcut id="tx" expression="execution(* com.**.dao.*.*(..))"/>  
	            <aop:before pointcut-ref="tx" method="before"/>  
	            <aop:after pointcut-ref="tx" method="after"/>
	    </aop:aspect>  
    </aop:config>  
    -->
</beans>